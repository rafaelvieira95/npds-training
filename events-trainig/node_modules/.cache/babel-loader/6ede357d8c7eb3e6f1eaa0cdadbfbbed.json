{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rafael/Documents/Projetos Git/npds-training/events-trainig/src/pages/Events/index.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Col, Row, Card, Button, Modal, Form } from \"react-bootstrap\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { CardLink } from 'react-router-dom';\nimport api from '../../services/api';\nexport default function Events() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [newEvent, setNewEvent] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [organizer, setOrganizer] = useState('');\n  const [localization, setLocalization] = useState('');\n  const [beginDate, setBeginDate] = useState('');\n  const [finishDate, setFinishDate] = useState('');\n  const isSubscribed = useRef(true);\n\n  const postNewEvent = async () => {\n    const eventData = {\n      name: name,\n      description: description,\n      organizer: organizer,\n      localization: localization,\n      beginDate: beginDate,\n      finishDate: finishDate\n    };\n    await api.post('events', eventData);\n    isSubscribed.current = true;\n  };\n\n  useEffect(() => {\n    isSubscribed.current = true;\n\n    async function retriveEvent() {\n      const eventsList = await api.get('events');\n      setEvents(eventsList.data);\n    }\n\n    if (isSubscribed.current) retriveEvent();\n    return () => isSubscribed.current = false;\n  }, [events]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Eventos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setNewEvent(true),\n            children: \"Novo evento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: newEvent,\n          onHide: () => setNewEvent(false),\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \" Cria\\xE7\\xE3o de um novo Evento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: \" Entre com dos dados do Evento \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Nome do Evento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Descri\\xE7\\xE3o \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 3,\n                  value: description,\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"organizer\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Organizador \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: organizer,\n                  onChange: e => setOrganizer(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"localization\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Localiza\\xE7\\xE3o \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: localization,\n                  onChange: e => setLocalization(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"beginDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Data de In\\xEDcio \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: beginDate,\n                  onChange: e => setBeginDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"finishDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \" Data de T\\xE9rmino \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  value: finishDate,\n                  onChange: e => setFinishDate(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => setNewEvent(false),\n              children: \" Cancelar \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => {\n                postNewEvent();\n                setNewEvent(false);\n              },\n              children: \" Criar evento \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: events.map(e => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem',\n              margin: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: e.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n                className: \"mb-2 text-muted\",\n                children: e.organizer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: e.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [\" Data inicio \", e.beginDate, \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 72\n                }, this), \" Data fim \", e.finishDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(CardLink, {\n                children: \" hushduah\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n                to: `/programations/${e.id}`,\n                href: `/programations/${e.id}`,\n                children: \" Programa\\xE7\\xE3o do evento \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Events, \"GQqPVHNjKMRYKOCc39Q+DhKk0Pk=\");\n\n_c = Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/home/rafael/Documents/Projetos Git/npds-training/events-trainig/src/pages/Events/index.js"],"names":["Container","Col","Row","Card","Button","Modal","Form","React","useState","useEffect","useRef","CardLink","api","Events","events","setEvents","newEvent","setNewEvent","name","setName","description","setDescription","organizer","setOrganizer","localization","setLocalization","beginDate","setBeginDate","finishDate","setFinishDate","isSubscribed","postNewEvent","eventData","post","current","retriveEvent","eventsList","get","data","e","target","value","map","width","margin","id"],"mappings":"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","sourcesContent":["import {Container, Col, Row, Card, Button , Modal, Form} from \"react-bootstrap\";\nimport React, {useState,useEffect, useRef} from \"react\";\nimport {CardLink} from 'react-router-dom';\n\nimport api from '../../services/api';\n\nexport default function Events(){\n\n    const [events, setEvents] = useState([]);\n    const [newEvent, setNewEvent] = useState(false);\n    \n    const [name , setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [organizer, setOrganizer] = useState('');\n    const [localization, setLocalization] = useState('');\n    const [beginDate, setBeginDate] = useState('');\n    const [finishDate, setFinishDate] = useState('');\n    \n    const isSubscribed = useRef(true);\n\n    const postNewEvent = async () =>{\n       \n    const eventData = {\n        \n           name: name,\n           description: description,\n           organizer: organizer,\n           localization: localization,\n           beginDate: beginDate,\n           finishDate: finishDate\n        }\n        await api.post('events', eventData);           \n        isSubscribed.current = true;\n   }\n\n    useEffect(() =>{\n              \n        isSubscribed.current = true;\n\n        async function retriveEvent(){    \n            const eventsList = await api.get('events');\n            setEvents(eventsList.data);\n        }\n\n        if(isSubscribed.current)\n                retriveEvent();\n        \n        return () => isSubscribed.current = false;\n        \n    }, [events]);\n\n\n    return (\n      <>\n      <Container fluid>\n          <Row>\n            <Col sm={4} md={8}>\n                   <h1>Eventos</h1>\n             </Col>\n              <Col>\n                  <Button variant=\"primary\" onClick={() => setNewEvent(true)}>Novo evento</Button>\n              </Col>\n\n            <Modal show={newEvent} onHide={() => setNewEvent(false)}>\n\n                <Modal.Title> Criação de um novo Evento</Modal.Title>\n                     <Modal.Header> Entre com dos dados do Evento </Modal.Header>\n                 <Modal.Body>\n\n                    <Form>\n                        <Form.Group controlId=\"name\">\n                        <Form.Label> Nome do Evento</Form.Label>\n                        <Form.Control type=\"text\"  value={name}  onChange={(e) => setName(e.target.value)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"description\">\n                        <Form.Label> Descrição </Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => setDescription(e.target.value)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"organizer\">\n                        <Form.Label> Organizador </Form.Label>\n                        <Form.Control type=\"text\" value={organizer} onChange={(e) => setOrganizer(e.target.value)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"localization\">\n                        <Form.Label> Localização </Form.Label>\n                        <Form.Control type=\"text\" value={localization} onChange={(e) => setLocalization(e.target.value)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"beginDate\">\n                        <Form.Label> Data de Início </Form.Label>\n                        <Form.Control type=\"text\" value={beginDate} onChange={(e) => setBeginDate(e.target.value)}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"finishDate\">\n                        <Form.Label> Data de Término </Form.Label>\n                        <Form.Control type=\"text\" value={finishDate} onChange={(e) => setFinishDate(e.target.value)}/>\n                        </Form.Group>\n\n                     </Form>\n\n                 </Modal.Body>\n                     <Modal.Footer>\n                       <Button variant=\"danger\" onClick={() => setNewEvent(false)}> Cancelar </Button>\n                       <Button variant=\"success\" onClick={() => {postNewEvent(); setNewEvent(false);}}> Criar evento </Button>\n                     </Modal.Footer>\n            </Modal>\n\n          </Row>\n\n              <Row>\n                  {events.map((e) =>\n                  <Col key={e.id} md={3}>\n                    <Card style={{width: '18rem', margin: '10px'}}>\n                          <Card.Body>\n                              <Card.Title>{e.name}</Card.Title>\n                              <Card.Subtitle className=\"mb-2 text-muted\">{e.organizer}</Card.Subtitle>\n                              <Card.Text>\n                                  {e.description}\n                              </Card.Text>\n                              <Card.Footer> Data inicio {e.beginDate}  <br/> Data fim {e.finishDate}</Card.Footer>\n                            <CardLink> hushduah</CardLink>\n                            <Card.Link to={`/programations/${e.id}`} href={`/programations/${e.id}`}> Programação do evento </Card.Link> \n                          </Card.Body>\n                      </Card>\n                  </Col>) }\n              </Row>\n\n      </Container>\n   </>\n  );\n}"]},"metadata":{},"sourceType":"module"}