{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rafael/Documents/Projetos Git/npds-training/events-trainig/src/pages/Programations/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col, Card, Button, Modal, Form, Toast } from 'react-bootstrap';\nimport api from '../../services/api';\nexport default function Programation() {\n  _s();\n\n  const now = new Date();\n  const isSubscribed = useRef(true);\n  const {\n    id\n  } = useParams();\n  const eventPath = `events/${id}`;\n  const [event, setEvent] = useState([]);\n  const [newProgramation, setNewProgramation] = useState(false);\n  const [show, setShow] = useState(false); //attr\n\n  const [name, setName] = useState('');\n  const [presenter, setPresenter] = useState('');\n  const [description, setDescription] = useState('');\n  const [beginDate, setBeginDate] = useState('');\n  const [finishDate, setFinishDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [workload, setWorkload] = useState(0);\n  const [beginRegistration, setBeginRegistration] = useState('');\n  const [finishRegistration, setFinishRegistration] = useState('');\n  useEffect(() => {\n    isSubscribed.current = true;\n\n    async function getNewProgramations() {\n      const response = await api.get(eventPath);\n      setEvent(response.data);\n    }\n\n    if (isSubscribed.current) {\n      getNewProgramations(); //resetar todos os campos\n\n      setName('');\n      setPresenter('');\n      setDescription('');\n      setBeginDate('');\n      setFinishDate('');\n      setStartTime('');\n      setEndTime('');\n      setWorkload(0);\n      setBeginRegistration('');\n      setFinishRegistration('');\n    }\n\n    return () => isSubscribed.current = false;\n  }, [eventPath]);\n\n  const postNewProgramation = async () => {\n    if (name !== '' && presenter !== '' && description !== '' && beginDate !== '' && finishDate !== '' && startTime !== '' && endTime !== '' && workload !== 0 && beginRegistration !== '' && finishRegistration !== '') {\n      const programations = {\n        name: name,\n        presenter: presenter,\n        description: description,\n        beginDate: beginDate,\n        finishDate: finishDate,\n        startTime: startTime,\n        endTime: endTime,\n        workload: workload,\n        beginRegistration: beginRegistration,\n        finishRegistration: finishRegistration,\n        event: event\n      };\n      await api.post(`programations`, programations); //toda e qualquer alteração, esconder o modal e ativar o toast\n\n      setNewProgramation(false);\n      setShow(true);\n      isSubscribed.current = true;\n    } else {\n      console.warn('campos em branco!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 4,\n        sm: 4,\n        md: 8,\n        xl: 8,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginBottom: \"10px\"\n          },\n          variant: \"primary\",\n          onClick: () => setNewProgramation(true),\n          children: \" Adicionar \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 8,\n        sm: 8,\n        md: 4,\n        xl: 4,\n        children: /*#__PURE__*/_jsxDEV(Toast, {\n          onClose: () => setShow(false),\n          show: show,\n          delay: 3000,\n          autohide: true,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"holder.js/20x20?text=%20\",\n              className: \"rounded mr-2\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"mr-auto\",\n              children: \"Programa\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Adicionada em \", `${now.getHours()}h${now.getMinutes()}m`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: \" Programa\\xE7\\xE3o adicionada com sucesso!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: newProgramation,\n        onHide: () => setNewProgramation(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \" Nova programa\\xE7\\xE3o para o evento \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \" preencha os dados da programa\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"nameProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Nome da Programa\\xE7\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"presenterProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Nome do Facilitador\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: presenter,\n                onChange: e => setPresenter(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"descriptionProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Descri\\xE7\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                value: description,\n                onChange: e => setDescription(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"beginDateProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Data In\\xEDcio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: beginDate,\n                onChange: e => setBeginDate(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"finishDateProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Data Fim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: finishDate,\n                onChange: e => setFinishDate(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"startTimeProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Hor\\xE1rio in\\xEDcio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"endTimeProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Hor\\xE1rio fim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"worloadProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Carga hor\\xE1ria\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: workload,\n                onChange: e => setWorkload(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"beginRegistrationProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"In\\xEDcio cadastro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: beginRegistration,\n                onChange: e => setBeginRegistration(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"finishRegistrationProgramation\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Fim cadastro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: finishRegistration,\n                onChange: e => setFinishRegistration(e.target.value),\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => setNewProgramation(false),\n            children: \" Cancelar \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: postNewProgramation,\n            children: \"  Criar programa\\xE7\\xE3o \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: event.programations && event.programations.map(p => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '360px',\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: p.presenter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" \", p.description, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" Data de inicio: \", p.beginDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" Data de fim: \", p.finishDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" Hor\\xE1rio in\\xEDcio: \", p.startTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" Hor\\xE1rio fim: \", p.endTime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" Carga hor\\xE1ria: \", p.workload, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\" Periodo de cadastro: \", p.beginRegistration, \" at\\xE9 \", p.finishRegistration, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              children: \" Deletar \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 18\n        }, this)\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 14\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Programation, \"3VHS0Qf+ahNozM+glB5j80D5qX4=\", false, function () {\n  return [useParams];\n});\n\n_c = Programation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Programation\");","map":{"version":3,"sources":["/home/rafael/Documents/Projetos Git/npds-training/events-trainig/src/pages/Programations/index.js"],"names":["React","useRef","useEffect","useState","useParams","Container","Row","Col","Card","Button","Modal","Form","Toast","api","Programation","now","Date","isSubscribed","id","eventPath","event","setEvent","newProgramation","setNewProgramation","show","setShow","name","setName","presenter","setPresenter","description","setDescription","beginDate","setBeginDate","finishDate","setFinishDate","startTime","setStartTime","endTime","setEndTime","workload","setWorkload","beginRegistration","setBeginRegistration","finishRegistration","setFinishRegistration","current","getNewProgramations","response","get","data","postNewProgramation","programations","post","console","warn","marginBottom","getHours","getMinutes","e","target","value","map","p","width"],"mappings":"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","sourcesContent":["\nimport React,{useRef, useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Container, Row, Col, Card, Button, Modal, Form, Toast} from 'react-bootstrap';\nimport api from '../../services/api';\n\nexport default function Programation(){\n     \n  const now = new Date();\n  \n  const isSubscribed = useRef(true);\n\n  const {id} = useParams();\n  const eventPath = `events/${id}`;\n  \n  const [event , setEvent] = useState([]);\n  const [newProgramation , setNewProgramation] = useState(false);\n  const [show, setShow] = useState(false);\n   \n    //attr\n    const [name, setName] = useState('');\n    const [presenter, setPresenter] = useState('');\n    const [description, setDescription] = useState('');\n    const [beginDate, setBeginDate] = useState(''); \n    const [finishDate, setFinishDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endTime, setEndTime] = useState('');\n    const [workload, setWorkload] = useState(0);\n    const [beginRegistration, setBeginRegistration] = useState('');\n    const [finishRegistration, setFinishRegistration] = useState('');\n\n   \n       useEffect(()=> {\n\n            isSubscribed.current = true;\n            \n            async function getNewProgramations(){\n                  const response = await api.get(eventPath);\n                  setEvent(response.data);  \n             }\n            \n             if(isSubscribed.current){\n\n                  getNewProgramations();\n                  //resetar todos os campos\n                  setName('');\n                  setPresenter('');\n                  setDescription('');\n                  setBeginDate('');\n                  setFinishDate('');\n                  setStartTime('');\n                  setEndTime('');\n                  setWorkload(0);\n                  setBeginRegistration('');\n                  setFinishRegistration('');\n             }\n            \n\n            return () => isSubscribed.current = false;\n            \n       }, [eventPath]);\n\n  \n\n    const postNewProgramation = async () =>{\n\n          if(name !== '' && presenter !== '' && description !== '' && beginDate !== '' &&\n             finishDate !== '' && startTime !=='' && endTime !== '' && workload !== 0 &&\n             beginRegistration !== '' && finishRegistration !== ''){\n                 \n                  const programations = {\n                     name: name,\n                     presenter: presenter,\n                     description: description,\n                     beginDate: beginDate,\n                     finishDate: finishDate,\n                     startTime: startTime,\n                     endTime: endTime,\n                     workload: workload,\n                     beginRegistration: beginRegistration,\n                     finishRegistration: finishRegistration,\n                     event: event,\n                  };\n\n                 await api.post(`programations`, programations);\n                 //toda e qualquer alteração, esconder o modal e ativar o toast\n                 setNewProgramation(false);\n                 setShow(true);\n                 isSubscribed.current = true;\n                \n            }else{\n                console.warn('campos em branco!');\n             }\n         }\n\n    return (\n     \n        <Container className=\"container-fluid\"> \n    \n          <Row>\n          <Col xs={4} sm={4} md={8} xl={8} >\n                <Button style={{marginBottom: \"10px\"}} variant=\"primary\" onClick={() => setNewProgramation(true)}> Adicionar </Button>  \n          </Col>\n\n          <Col xs={8} sm={8} md={4} xl={4}>\n           <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n              <Toast.Header>\n               <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\"/>\n               <strong className=\"mr-auto\">Programação</strong>\n               <small>Adicionada em {`${now.getHours()}h${now.getMinutes()}m`}</small>\n             </Toast.Header>\n          <Toast.Body> Programação adicionada com sucesso!</Toast.Body>\n        </Toast>\n                </Col>\n          </Row>\n\n         <Row>\n      \n            <Modal show={newProgramation} onHide={() => setNewProgramation(false)}>\n             <Modal.Title> Nova programação para o evento </Modal.Title>\n                  <Modal.Header> preencha os dados da programação</Modal.Header>\n              <Modal.Body>\n                 <Form>\n                      <Form.Group controlId=\"nameProgramation\">\n                        <Form.Label>Nome da Programação</Form.Label>\n                          <Form.Control type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"presenterProgramation\">\n                        <Form.Label>Nome do Facilitador</Form.Label>\n                          <Form.Control type=\"text\" value={presenter} onChange={(e) => setPresenter(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"descriptionProgramation\">\n                        <Form.Label>Descrição</Form.Label>\n                          <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => setDescription(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"beginDateProgramation\">\n                        <Form.Label>Data Início</Form.Label>\n                          <Form.Control type=\"text\" value={beginDate} onChange={(e) => setBeginDate(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"finishDateProgramation\">\n                        <Form.Label>Data Fim</Form.Label>\n                          <Form.Control type=\"text\" value={finishDate} onChange={(e) => setFinishDate(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"startTimeProgramation\">\n                        <Form.Label>Horário início</Form.Label>\n                          <Form.Control type=\"text\" value={startTime} onChange={(e) => setStartTime(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"endTimeProgramation\">\n                        <Form.Label>Horário fim</Form.Label>\n                          <Form.Control type=\"text\" value={endTime} onChange={(e) => setEndTime(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"worloadProgramation\">\n                        <Form.Label>Carga horária</Form.Label>\n                          <Form.Control type=\"text\" value={workload} onChange={(e) => setWorkload(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"beginRegistrationProgramation\">\n                        <Form.Label>Início cadastro</Form.Label>\n                          <Form.Control type=\"text\" value={beginRegistration} onChange={(e) => setBeginRegistration(e.target.value)} required autoFocus/>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"finishRegistrationProgramation\">\n                        <Form.Label>Fim cadastro</Form.Label>\n                          <Form.Control type=\"text\" value={finishRegistration} onChange={(e) => setFinishRegistration(e.target.value)} required autoFocus/>\n                      </Form.Group>\n                 </Form>\n              </Modal.Body>\n              \n              <Modal.Footer>\n                 <Button variant=\"danger\" onClick={() => setNewProgramation(false)}> Cancelar </Button>\n                 <Button variant=\"success\" onClick={postNewProgramation}>  Criar programação </Button>\n              </Modal.Footer>\n            </Modal>\n       \n      </Row>\n\n      <Row>\n         {event.programations && event.programations.map((p) => \n             <Col key={p.id} md={4}>\n                 <Card style={{ width: '360px', marginBottom:\"15px\"}}>\n                     <Card.Body>\n                        <Card.Title>{p.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{p.presenter}</Card.Subtitle>\n                               <Card.Text> {p.description} </Card.Text>\n                               <Card.Text> Data de inicio: {p.beginDate} </Card.Text>\n                               <Card.Text> Data de fim: {p.finishDate} </Card.Text>\n                               <Card.Text> Horário início: {p.startTime} </Card.Text>\n                               <Card.Text> Horário fim: {p.endTime} </Card.Text>\n                               <Card.Text> Carga horária: {p.workload} </Card.Text>\n                               <Card.Text> Periodo de cadastro: {p.beginRegistration} até { p.finishRegistration} </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                          <Button variant=\"danger\"> Deletar </Button>\n                    </Card.Footer>\n                 </Card>\n             </Col>\n          ) } \n        </Row>\n    \n        </Container>           \n  );\n\n}\n"]},"metadata":{},"sourceType":"module"}